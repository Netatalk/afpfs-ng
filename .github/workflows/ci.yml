name: Build

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'AUTHORS'
      - 'BUGS'
      - 'COPYING'
      - 'INSTALL.md'
      - 'NEWS'
      - 'README.md'
      - 'TODO'
  pull_request:
    branches: [ "main" ]
    types:
      - opened
      - synchronize
      - reopened
    paths-ignore:
      - 'AUTHORS'
      - 'BUGS'
      - 'COPYING'
      - 'INSTALL.md'
      - 'NEWS'
      - 'README.md'
      - 'TODO'

jobs:
  build-alpine:
    name: Alpine Linux
    runs-on: ubuntu-latest
    container:
      image: alpine:3.22.1
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install dependencies
        run: |
          apk add --no-cache \
            build-base \
            cmark \
            fuse-dev \
            gmp-dev \
            libgcrypt-dev \
            meson \
            ncurses-dev \
            ninja \
            readline-dev
      - name: Setup
        run: meson setup build --prefix=/usr
      - name: Compile
        run: meson compile -C build
      - name: Install
        run: meson install -C build
      - name: Run
        run: afpcmd -h
      - name: Uninstall
        run: ninja -C build uninstall

  build-fedora:
    name: Fedora Linux
    runs-on: ubuntu-latest
    container:
      image: fedora:42
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install dependencies
        run: |
          dnf --setopt=install_weak_deps=False --assumeyes install \
            cmark \
            fuse-devel \
            gcc \
            gmp-devel \
            libgcrypt-devel \
            meson \
            ncurses-devel \
            ninja-build \
            readline-devel
      - name: Setup
        run: meson setup build --prefix=/usr
      - name: Compile
        run: meson compile -C build
      - name: Install
        run: sudo meson install -C build
      - name: Run
        run: afpcmd -h
      - name: Uninstall
        run: sudo ninja -C build uninstall

  build-ubuntu:
    name: Ubuntu
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install --assume-yes --no-install-recommends \
          cmark-gfm \
          gcc \
          libgcrypt-dev \
          libfuse-dev \
          libgmp-dev \
          libreadline-dev \
          libncurses-dev \
          meson \
          ninja-build
    - name: Setup
      run: meson setup build --prefix=/usr
    - name: Compile
      run: meson compile -C build
    - name: Install
      run: sudo meson install -C build
    - name: Run
      run: afpcmd -h
    - name: Uninstall
      run: sudo ninja -C build uninstall

  build-macos:
    name: macOS
    runs-on: macos-latest
    env:
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install dependencies
        run: |
          brew update
          brew upgrade
          brew install \
            cmark-gfm \
            macfuse \
            meson
      - name: Setup
        run: meson setup build
      - name: Compile
        run: meson compile -C build
      - name: Install
        run: sudo meson install -C build
      - name: Run
        run: afpcmd -h
      - name: Uninstall
        run: sudo ninja -C build uninstall

  build-freebsd:
    name: FreeBSD
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Build on VM
        uses: vmactions/freebsd-vm@487ce35b96fae3e60d45b521735f5aa436ecfade # v1.2.4
        with:
          copyback: false
          prepare: |
            pkg install -y \
              cmark \
              fusefs-libs \
              gmp \
              libgcrypt \
              libiconv \
              meson \
              pkgconf \
              readline
          run: |
            set -e
            meson setup build \
              -Dpkg_config_path=/usr/local/libdata/pkgconfig
            meson compile -C build
            meson install -C build
            afpcmd -h
            ninja -C build uninstall
